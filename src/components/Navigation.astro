---
import ThemeToggle from './ThemeToggle.astro';

const navItems = [
	{ path: '/', label: 'Home' },
	{ path: '/project/', label: 'Project' },
	{ path: '/course/', label: 'Course' },
	{ path: '/blog/', label: 'Blog' },
];

const currentPath = Astro.url.pathname;
---

<header
	id="main-header"
	class="sticky top-0 z-50 w-full border-b border-gray-200/80 bg-white/80 backdrop-blur-lg dark:border-gray-800/80 dark:bg-gray-900/80"
>
	<nav class="container mx-auto flex h-16 items-center justify-between p-4">
		<!-- Desktop Menu -->
		<div class="hidden items-center space-x-2 text-sm sm:space-x-5 md:flex">
			{
				navItems.map(({ path, label }) => {
					const isActive =
						currentPath === path ||
						(path !== '/' && currentPath.startsWith(path));
					return (
						<a
							href={path}
							class={`group relative px-2 py-1 text-xs transition-colors duration-200 sm:text-sm ${
								isActive
									? 'font-semibold text-gray-900 dark:text-white'
									: 'text-gray-700 hover:text-gray-900 dark:text-gray-200 dark:hover:text-white'
							}`}
						>
							{label}
							<span
								class={`absolute -bottom-0.5 left-0 h-0.5 w-0 bg-current opacity-70 transition-all duration-300 ease-out ${
									isActive ? 'w-full' : 'group-hover:w-full'
								}`}
							/>
						</a>
					);
				})
			}
		</div>
		<div class="hidden md:block">
			<ThemeToggle />
		</div>

		<!-- Mobile Menu Toggle -->
		<button
			id="mobile-menu-toggle"
			class="z-50 text-gray-700 md:hidden dark:text-gray-200"
			aria-label="Toggle menu"
		>
			<svg
				id="menu-icon"
				xmlns="http://www.w3.org/2000/svg"
				class="h-6 w-6"
				fill="none"
				viewBox="0 0 24 24"
				stroke="currentColor"
			>
				<path
					stroke-linecap="round"
					stroke-linejoin="round"
					stroke-width="2"
					d="M4 6h16M4 12h16m-4 6h4"></path>
			</svg>
			<svg
				id="close-icon"
				xmlns="http://www.w3.org/2000/svg"
				class="hidden h-6 w-6"
				fill="none"
				viewBox="0 0 24 24"
				stroke="currentColor"
			>
				<path
					stroke-linecap="round"
					stroke-linejoin="round"
					stroke-width="2"
					d="M6 18L18 6M6 6l12 12"></path>
			</svg>
		</button>

		<!-- Mobile Menu Overlay -->
		<div
			id="mobile-menu"
			class="fixed inset-0 z-40 hidden h-screen w-screen flex-col items-center justify-center space-y-5 bg-white/95 text-2xl font-semibold text-gray-800 backdrop-blur-lg dark:bg-gray-900/95 dark:text-gray-200"
		>
			{
				navItems.map(({ path, label }) => (
					<a href={path} class="hover:text-gray-950 dark:hover:text-white">
						{label}
					</a>
				))
			}
			<div class="absolute bottom-10">
				<ThemeToggle />
			</div>
		</div>
	</nav>
</header>

<script>
	const toggleButton = document.getElementById('mobile-menu-toggle');
	const mobileMenu = document.getElementById('mobile-menu');
	const menuIcon = document.getElementById('menu-icon');
	const closeIcon = document.getElementById('close-icon');
	const header = document.getElementById('main-header');

	if (toggleButton && mobileMenu && menuIcon && closeIcon && header) {
		toggleButton.addEventListener('click', () => {
			mobileMenu.classList.toggle('hidden');
			mobileMenu.classList.toggle('flex');
			menuIcon.classList.toggle('hidden');
			closeIcon.classList.toggle('hidden');
		});

		// Close menu when a link is clicked
		mobileMenu.querySelectorAll('a').forEach((link) => {
			link.addEventListener('click', () => {
				mobileMenu.classList.add('hidden');
				mobileMenu.classList.remove('flex');
				menuIcon.classList.remove('hidden');
				closeIcon.classList.add('hidden');
			});
		});
	}
</script>
